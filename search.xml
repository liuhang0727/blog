<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DS-SLAM</title>
    <url>/2020/03/08/DS-SLAM/</url>
    <content><![CDATA[<blockquote>
<p> A Semantic Visual SLAM towards Dynamic Environments  </p>
</blockquote>
<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h2><p>SLAM系统在动态场景中易受到动态物体的干扰，且创建的地图仅包含几何信息，如路标点地图或点云地图，无法用于高级别的场景理解。  </p>
<p>DS-SLAM结合图像予以分割网络和运动一致性检测，消减场景中动态障碍物的影响，提高定位精度。同时，创建稠密的语义八叉树地图，满足机器人高级别的任务。  </p>
<p><img src="../../../../../files/PaperReading/DS_SLAM/p1.png" alt="Overview" title="Overview">  </p>
<a id="more"></a>  

<h2 id="2-Methods"><a href="#2-Methods" class="headerlink" title="2 Methods"></a>2 Methods</h2><h3 id="2-1-Framework"><a href="#2-1-Framework" class="headerlink" title="2.1 Framework"></a>2.1 Framework</h3><p>DS-SLAM在ORB-SLAM2的基础上拓展，系统包含5个并行线程：特征追踪，局部建图，回环检测，稠密语义建图。  </p>
<p><img src="../../../../../files/PaperReading/DS_SLAM/p2.png" alt="Framework" title="Framework">  </p>
<h3 id="2-2-Semantic-Segmentation"><a href="#2-2-Semantic-Segmentation" class="headerlink" title="2.2 Semantic Segmentation"></a>2.2 Semantic Segmentation</h3><p>使用SegNet对彩图图像进行语义分割，并仅把行人作为潜在动态物体。  </p>
<h3 id="2-3-Moving-Consistency-Check"><a href="#2-3-Moving-Consistency-Check" class="headerlink" title="2.3 Moving Consistency Check"></a>2.3 Moving Consistency Check</h3><p>根据光流信息查找特征点中是运动的点，具体实现细节不太理解。  </p>
<p>之所以这么做是因为不完全相信语义分割的结果，其对于静止的人身上的特征点是选择保留的。并解释说，语义分割的线程较慢，特征追踪的线程较快，闲着也是闲着，所以增加了这个运动一致性检测的模块。WF??!!  </p>
<h3 id="2-4-Outliers-Rejection"><a href="#2-4-Outliers-Rejection" class="headerlink" title="2.4 Outliers Rejection"></a>2.4 Outliers Rejection</h3><p>结合运动一致性和语义分割信息，仅剔除正在运动的行人身上的特征点对。  </p>
<h3 id="2-5-Dense-Semantic-3D-Octo-tree-Map-Building"><a href="#2-5-Dense-Semantic-3D-Octo-tree-Map-Building" class="headerlink" title="2.5 Dense Semantic 3D Octo-tree Map Building"></a>2.5 Dense Semantic 3D Octo-tree Map Building</h3><p>八叉树地图灵活，紧凑，可更新，存储效率高，便于导航。  </p>
<p>Voxel的语义属性采用概率表达，便于更新。  </p>
<p>由于语义分割的精度有限，且在复杂场景中物体相互遮挡，导致语义分割的结果存在错误。Voxel的存在性使用log-odds值计算更新。  </p>
<h2 id="3-Results"><a href="#3-Results" class="headerlink" title="3 Results"></a>3 Results</h2><p>使用TUM数据集和自采数据进行测试。  </p>
<p>一帧耗时59.4ms，既然是多线程并行，耗时就不应该是各线程耗时和。  </p>
<p>在动态场景中，相比于ORB-SLAM2，定位精度大幅提升。  </p>
<p><img src="../../../../../files/PaperReading/DS_SLAM/p3.png" alt="ORB-SLAM2" title="ORB-SLAM2"><br><img src="../../../../../files/PaperReading/DS_SLAM/p4.png" alt="DS-SLAM" title="DS-SLAM">  </p>
<h2 id="4-Ponder"><a href="#4-Ponder" class="headerlink" title="4 Ponder"></a>4 Ponder</h2><p>a) 运动一致性检测的实现细节?<br>b) Voxel语义属性概率表达如何实现?<br>c) Voxel存在性怎么使用log-odds更新?  </p>
<h2 id="5-More"><a href="#5-More" class="headerlink" title="5 More"></a>5 More</h2><p>Paper：<a href="../../../../../files/PaperReading/DS_SLAM/DS-SLAM_A_Semantic_Visual_SLAM_towards_Dynamic_Environments.pdf">链接</a>  </p>
]]></content>
      <categories>
        <category>PaperReading</category>
      </categories>
      <tags>
        <tag>SLAM</tag>
        <tag>RGB-D</tag>
        <tag>Semantic</tag>
      </tags>
  </entry>
  <entry>
    <title>Loam-livox</title>
    <url>/2020/03/02/Loam-livox/</url>
    <content><![CDATA[<blockquote>
<p>A fast robust high-precision LiDAR odometry and mapping package for LiDARs of small FoV  </p>
</blockquote>
<h2 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h2><p>相比于传统的机械旋转式Lidar, mems振镜固态式Lidar价格相对低廉, 为Lidar的大规模拓展应用提供更多可能性，成为一大风口.  </p>
<p>固态Lidar特点：<br>1 Small FoV：小视角特征较少易出现退化现象，且易受到动态物体的影响<br>2 Irregular scanning pattern：不规则扫描不利于特征提取, 无法直观有效地获取点间的近邻关系<br>3 Non-repetitive scanning：即使Lidar处于静止状态, 相邻两帧点云也是不同的<br>4 Motion blur：同旋转式Lidar, 连续扫描使得帧内数据获取时间不严格一致  </p>
<p><img src="../../../../../files/PaperReading/Loam_livox/p4.png" alt="扫描方式" title="扫描方式">  </p>
<p>本文在LOAM的基础上进行拓展，研究内容包括特征提取, 运动补偿, 误关联剔除, 动态物体剔除  </p>
<a id="more"></a>  

<h2 id="2-Methods"><a href="#2-Methods" class="headerlink" title="2 Methods"></a>2 Methods</h2><h3 id="2-1-Points-selection-and-feature-extraction"><a href="#2-1-Points-selection-and-feature-extraction" class="headerlink" title="2.1 Points selection and feature extraction"></a>2.1 Points selection and feature extraction</h3><p>在进行特征提取前, 先筛选剔除以下几类点：视场边缘的点, 反射强度过大或过小的点, 与局部平面夹角近似0°或180°的点 (这里的局部平面怎么得到的呢?), 被遮挡的点 (怎么优雅地遍历呢?).  </p>
<p>特征提取的方法延用LOAM (不规则的扫描方式, 怎么查找点间的近邻关系呢?), 同时考虑反射强度信息, 与近邻点的强度值差别较大的点亦定义为角点.  </p>
<p><img src="../../../../../files/PaperReading/Loam_livox/p6.png" alt="特征提取与数据关联" title="特征提取与数据关联">  </p>
<h3 id="2-2-Iterative-pose-optimization"><a href="#2-2-Iterative-pose-optimization" class="headerlink" title="2.2 Iterative pose optimization"></a>2.2 Iterative pose optimization</h3><p>延用LOAM中点到线和点到面的数据关联方式. 论文中使用的edge-to-edge和plane-to-plane的说法是不严谨的.  </p>
<p>运动补偿的方法包括piecewise processing和linear interpolation两种. 其中piecewise processing是指将一帧点云按照扫描顺序分为三个sub-frames, 分别独立地对三个sub-frames进行帧与地图的匹配, sub-frames的匹配在并行的三个线程中独立处理 (值得借鉴), 并且试验中证明这种运动补偿的方式更优.  </p>
<p>误匹配和动态物体的剔除在优化求解中统一处理. 迭代优化求解时，在迭代两遍后，然后剔除误差较大的20%的关联，然后再接着迭代优化 (机智啊!).  </p>
<h2 id="3-Results"><a href="#3-Results" class="headerlink" title="3 Results"></a>3 Results</h2><p>建的图好看就完事了~<br><img src="../../../../../files/PaperReading/Loam_livox/p1.png" alt="SLAM_1" title="SLAM_1">  </p>
<p><img src="../../../../../files/PaperReading/Loam_livox/p2.png" alt="SLAM_2" title="SLAM_2">  </p>
<p><img src="../../../../../files/PaperReading/Loam_livox/p8.png" alt="SLAM_3" title="SLAM_8">  </p>
<h2 id="4-Ponder"><a href="#4-Ponder" class="headerlink" title="4 Ponder"></a>4 Ponder</h2><p>a) 特征提取模块的代码实现细节?<br>b) Piecewise processing中三个独立的子线程如何实现?<br>c) 误匹配和动态物体的剔除技巧值得借鉴呀!  </p>
<h2 id="5-More"><a href="#5-More" class="headerlink" title="5 More"></a>5 More</h2><p>Paper：<a href="../../../../../files/PaperReading/Loam_livox/Loam-livox_A_fast_robust_high-precision_LiDAR_odometry_and_mapping_package_for_LiDARs_of_small_FoV.pdf">链接</a><br>Code：<a href="https://github.com/hku-mars/loam_livox" target="_blank" rel="noopener">链接</a><br>Sensor：<a href="https://www.livoxtech.com/mid-40-and-mid-100" target="_blank" rel="noopener">连接</a></p>
]]></content>
      <categories>
        <category>PaperReading</category>
      </categories>
      <tags>
        <tag>SLAM</tag>
        <tag>Lidar</tag>
      </tags>
  </entry>
  <entry>
    <title>深造or就业</title>
    <url>/2020/02/16/%E6%B7%B1%E9%80%A0or%E5%B0%B1%E4%B8%9A/</url>
    <content><![CDATA[<blockquote>
<p>在最好的时代, 做一个了不起的梦.  </p>
</blockquote>
<p>计划总是被变化甩上几条街的距离.   </p>
<p>突如其来的疫情扰乱着14亿人的计划. 工厂的设备停止运转, 工人隔离在家中等待着政府的号令; 学校的教室空空如也, 学生以观看直播的方式响应着”停课不停学”的计划; 医院的病房人满为患, 医护人员和感染病人争分夺秒地与病毒抗争着. 巨大的社会机器像是一列的<a href="https://movie.douban.com/subject/3071441/" target="_blank" rel="noopener">雪国列车</a>, 灾难、恐慌、权力、等级、人性等.   </p>
<a id="more"></a>  

<p>最后一个学生时代的假期竟是如此特殊, 多次延期使其变得极其漫长. 原定于三月份的毕业答辩变得遥遥无期, 在诗情画意的樱花大道拍张毕业照定格学生时代的梦想也变为不可能, 毕业论文致谢中预言的”冬去春来, 已有朵朵早樱点缀着樱花大道, 呼唤着樱花盛开的到来, 为毕业季增添几分美好与诗意”成了一纸空话.   </p>
<p>可以预想, 在一个匆匆的简易毕业典礼后, 就要彻底和校园说再见了. 或许是20余年的习惯, 或许是对安逸生活的依赖, 或许是未能满足的自尊心, 使得这份别离夹杂着如此多的酸楚. </p>
<p>身边的很多同事和同学有着博士学历或选择继续攻读博士学位, 而自己却就要止步于一名小硕士, 如同低人一等的矮个子, 和他们交谈时不得不被俯视. 曾经为录用Offer薪资的沾沾自喜感已灰飞烟灭, 从此之后, 优秀等字眼可能将会越走越远, 成为一名普普通通的人.   </p>
<p>学习的目的是什么呢? 增加技能与提升价值.   </p>
<p>学历和能力的竞争力哪个更胜一筹呢? 旗鼓相当.   </p>
<p>深造和就业怎么选择呢? 深造, 学历和能力是可以兼得的; 就业, 当且仅当能力的提升速度是前者的倍数, 二者才可相提并论.   </p>
<p>从近一年的实习经历来看, “倍数”的假设是能够成立的. 在公司实习的日子是整个研究生阶段最快乐的时光, 相比于教研室苦闷、忧愁、焦虑、无作为的生活节奏, 在公司研发的感受更多是充实、积极、拼搏、成就.   </p>
<p>既然没有圣人指明前行道路, 评判每个选择的正确性, 便只能跟随内心凭借直觉摸着石头过河. 幻想一下, 如同天注定, 每一个选择都会在未来的某个日子为之而感动. 就像喜欢很久的一句话, “岁月特别实在, 你想要的终会到来”.   </p>
<p>抛去思想阴霾, 制定合理的学习计划, 不断提升自身价值.   </p>
<p>在最好的时代, 做一个了不起的梦. </p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>深造</tag>
        <tag>就业</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo+GitHub搭建个人博客</title>
    <url>/2020/02/12/Hexo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<blockquote>
<p>博客是记录成长与进步的最好工具  </p>
</blockquote>
<h2 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h2><p>安装git  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install git-core</span><br></pre></td></tr></table></figure>
<p>安装Node.js  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -</span><br><span class="line">$ sudo apt-get install -y nodejs</span><br></pre></td></tr></table></figure>
<p>安装Hexo  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<a id="more"></a>  

<p>新建工作空间  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<p>其中_config.yml文件配置网站信息;　source存放用户资源数据;　themes存放博客主题.  </p>
<h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>优雅的主题能够给人带来美感和创作的源泉, 本博客采用的主题为<a href="https://shen-yu.gitee.io/2019/ayer/" target="_blank" rel="noopener">Ayer</a>. 可根据个人审美选择偏爱的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>.首先将主题文件下载到theme文件夹中  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/Shen-Yu/hexo-theme-ayer.git themes/ayer</span><br></pre></td></tr></table></figure>
<p>将工作空间根目录下的_config.yml中的theme值修改为ayer  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">theme: ayer</span><br></pre></td></tr></table></figure>
<p>其中主题的细节配置可通过修改新下载主题ayer文件夹中的_config.yml文件, 详细内容可参阅<a href="https://shen-yu.gitee.io/2019/ayer/" target="_blank" rel="noopener">ayer官方文档</a>.</p>
<h2 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h2><p>生成GitHub的SSH Key  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C <span class="string">"email of github account"</span></span><br></pre></td></tr></table></figure>
<p>复制 ~/.ssh/id_rsa.pub 文件中的内容, 将其粘贴到”GitHub-&gt;Setting-&gt;SSH and GPG Keys-&gt;New SSH key”中, 并新建以”liuhang0727.github.io”命名的仓库.  </p>
<h2 id="部署测试"><a href="#部署测试" class="headerlink" title="部署测试"></a>部署测试</h2><p>安装<a href="https://github.com/hexojs/hexo-deployer-git" target="_blank" rel="noopener">hexo-deployer-git</a>  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
<p>修改工作空间根目录下的_config.yml中的deploy值  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: git@github.com:liuhang0727/liuhang0727.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure>
<p>远程部署  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>在浏览器中输入 <a href="https://liuhang0727.github.io" target="_blank" rel="noopener">https://liuhang0727.github.io</a> 即可查看搭建的博客.  </p>
<h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><p>可通过命令行新建文章  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new &lt;模板&gt;　&lt;文章名&gt;</span><br></pre></td></tr></table></figure>
<p>其中模板包括post, draft和page三类, 详细介绍可参阅<a href="https://hexo.io/zh-cn/docs/writing" target="_blank" rel="noopener">官方文档</a>. 新建的文件存放在source/_post/*.md, 可使用<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">vscode</a>进行Markdown文本编辑, Markdown语法可参考<a href="https://www.jianshu.com/p/ebe52d2d468f" target="_blank" rel="noopener">博客</a>.　在完成创作后, 可发布部署  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>更多信息，请参阅Hexo<a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a>.  </p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
</search>
